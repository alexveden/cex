// Autogenerated <fff.h> mocks
// NOTE: Do not edit, all changes can be lost

// clang-format off
#include <cex/cextest/fff.h>
#include <cex/cexlib/deque.h>


FAKE_VALUE_FUNC(deque_head_s*, _deque__head, deque_c)
FAKE_VALUE_FUNC(size_t, _deque__alloc_capacity, size_t)
FAKE_VALUE_FUNC(void*, _deque__get_byindex, deque_head_s*, size_t)
FAKE_VALUE_FUNC(size_t, _deque__alloc_size, size_t, size_t, size_t)
FAKE_VALUE_FUNC(Exc, _deque_validate, deque_c)
FAKE_VALUE_FUNC(Exc, _deque_create, deque_c*, size_t, bool, size_t, size_t, const Allocator_c*)
FAKE_VALUE_FUNC(Exc, _deque_create_static, deque_c*, void*, size_t, bool, size_t, size_t)
FAKE_VALUE_FUNC(Exc, _deque_append, deque_c*, const void*)
FAKE_VALUE_FUNC(Exc, _deque_enqueue, deque_c*, const void*)
FAKE_VALUE_FUNC(Exc, _deque_push, deque_c*, const void*)
FAKE_VALUE_FUNC(void*, _deque_dequeue, deque_c*)
FAKE_VALUE_FUNC(void*, _deque_pop, deque_c*)
FAKE_VALUE_FUNC(void*, _deque_get, deque_c*, size_t)
FAKE_VALUE_FUNC(size_t, _deque_count, const deque_c*)
FAKE_VOID_FUNC(_deque_clear, deque_c*)
FAKE_VALUE_FUNC(void*, _deque_destroy, deque_c*)
FAKE_VALUE_FUNC(void*, _deque_iter_get, deque_c*, i32, cex_iterator_s*)
FAKE_VALUE_FUNC(void*, _deque_iter_fetch, deque_c*, i32, cex_iterator_s*)

const struct __module__deque deque = {
    // Autogenerated by CEX
    // clang-format off
    .validate = _deque_validate,
    .create = _deque_create,
    .create_static = _deque_create_static,
    .append = _deque_append,
    .enqueue = _deque_enqueue,
    .push = _deque_push,
    .dequeue = _deque_dequeue,
    .pop = _deque_pop,
    .get = _deque_get,
    .count = _deque_count,
    .clear = _deque_clear,
    .destroy = _deque_destroy,
    .iter_get = _deque_iter_get,
    .iter_fetch = _deque_iter_fetch,
    // clang-format on
};
// clang-format off


static void fake__cex__cexlib__deque__resetall(void) {
    RESET_FAKE(_deque__head)
    RESET_FAKE(_deque__alloc_capacity)
    RESET_FAKE(_deque__get_byindex)
    RESET_FAKE(_deque__alloc_size)
    RESET_FAKE(_deque_validate)
    RESET_FAKE(_deque_create)
    RESET_FAKE(_deque_create_static)
    RESET_FAKE(_deque_append)
    RESET_FAKE(_deque_enqueue)
    RESET_FAKE(_deque_push)
    RESET_FAKE(_deque_dequeue)
    RESET_FAKE(_deque_pop)
    RESET_FAKE(_deque_get)
    RESET_FAKE(_deque_count)
    RESET_FAKE(_deque_clear)
    RESET_FAKE(_deque_destroy)
    RESET_FAKE(_deque_iter_get)
    RESET_FAKE(_deque_iter_fetch)
}

