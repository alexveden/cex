// Autogenerated <fff.h> mocks
// NOTE: Do not edit, all changes can be lost

// clang-format off
#include <cex/cextest/fff.h>
#include <cex/cexlib/sbuf.h>


FAKE_VALUE_FUNC(sbuf_head_s*, _sbuf__head, sbuf_c)
FAKE_VALUE_FUNC(size_t, _sbuf__alloc_capacity, size_t)
FAKE_VALUE_FUNC(Exc, _sbuf__grow_buffer, sbuf_c*, u32)
FAKE_VALUE_FUNC(Exc, _sbuf_create, sbuf_c*, u32, const Allocator_c*)
FAKE_VALUE_FUNC(Exc, _sbuf_create_static, sbuf_c*, char*, size_t)
FAKE_VALUE_FUNC(Exc, _sbuf_grow, sbuf_c*, u32)
FAKE_VALUE_FUNC(Exc, _sbuf_append_c, sbuf_c*, char*)
FAKE_VALUE_FUNC(Exc, _sbuf_replace, sbuf_c*, const str_c, const str_c)
FAKE_VALUE_FUNC(Exc, _sbuf_append, sbuf_c*, str_c)
FAKE_VOID_FUNC(_sbuf_clear, sbuf_c*)
FAKE_VALUE_FUNC(u32, _sbuf_length, const sbuf_c)
FAKE_VALUE_FUNC(u32, _sbuf_capacity, const sbuf_c)
FAKE_VALUE_FUNC(sbuf_c, _sbuf_destroy, sbuf_c*)

const struct __module__sbuf sbuf = {
    // Autogenerated by CEX
    // clang-format off
    .create = _sbuf_create,
    .create_static = _sbuf_create_static,
    .grow = _sbuf_grow,
    .append_c = _sbuf_append_c,
    .replace = _sbuf_replace,
    .append = _sbuf_append,
    .clear = _sbuf_clear,
    .length = _sbuf_length,
    .capacity = _sbuf_capacity,
    .destroy = _sbuf_destroy,
    // clang-format on
};
// clang-format off


static void fake__cex__cexlib__sbuf__resetall(void) {
    RESET_FAKE(_sbuf__head)
    RESET_FAKE(_sbuf__alloc_capacity)
    RESET_FAKE(_sbuf__grow_buffer)
    RESET_FAKE(_sbuf_create)
    RESET_FAKE(_sbuf_create_static)
    RESET_FAKE(_sbuf_grow)
    RESET_FAKE(_sbuf_append_c)
    RESET_FAKE(_sbuf_replace)
    RESET_FAKE(_sbuf_append)
    RESET_FAKE(_sbuf_clear)
    RESET_FAKE(_sbuf_length)
    RESET_FAKE(_sbuf_capacity)
    RESET_FAKE(_sbuf_destroy)
}

