// Autogenerated <fff.h> mocks
// NOTE: Do not edit, all changes can be lost

// clang-format off
#include <cex/cextest/fff.h>
#include <cex/cexlib/sview.h>

// IMPORTANT: wrapping works only with gcc  `-Wl,--wrap=Shmem_new,--wrap=Protocol_event_emitter_new`  flag
FAKE_VALUE_FUNC(bool, __wrap__str__isvalid, const str_c*)bool __real__str__isvalid(const str_c*);

FAKE_VALUE_FUNC(ssize_t, __wrap__str__index, str_c*, char)ssize_t __real__str__index(str_c*, char);

FAKE_VALUE_FUNC(str_c, __wrap__str_cstr, const char*)str_c __real__str_cstr(const char*);

FAKE_VALUE_FUNC(str_c, __wrap__str_cbuf, char*, size_t)str_c __real__str_cbuf(char*, size_t);

FAKE_VALUE_FUNC(str_c, __wrap__str_sub, str_c, ssize_t, ssize_t)str_c __real__str_sub(str_c, ssize_t, ssize_t);

FAKE_VALUE_FUNC(Exc, __wrap__str_copy, str_c, char*, size_t)Exception __real__str_copy(str_c, char*, size_t);

FAKE_VALUE_FUNC(size_t, __wrap__str_length, str_c)size_t __real__str_length(str_c);

FAKE_VALUE_FUNC(bool, __wrap__str_is_valid, str_c)bool __real__str_is_valid(str_c);

FAKE_VALUE_FUNC(char*, __wrap__str_iter, str_c, cex_iterator_s*)char* __real__str_iter(str_c, cex_iterator_s*);

FAKE_VALUE_FUNC(ssize_t, __wrap__str_indexof, str_c, str_c, size_t, size_t)ssize_t __real__str_indexof(str_c, str_c, size_t, size_t);

FAKE_VALUE_FUNC(bool, __wrap__str_contains, str_c, str_c)bool __real__str_contains(str_c, str_c);

FAKE_VALUE_FUNC(bool, __wrap__str_starts_with, str_c, str_c)bool __real__str_starts_with(str_c, str_c);

FAKE_VALUE_FUNC(bool, __wrap__str_ends_with, str_c, str_c)bool __real__str_ends_with(str_c, str_c);

FAKE_VALUE_FUNC(str_c*, __wrap__str_iter_split, str_c, const char, cex_iterator_s*)str_c* __real__str_iter_split(str_c, const char, cex_iterator_s*);


const struct __module__str str = {
    // Autogenerated by CEX
    // clang-format off
    .cstr = _str_cstr,
    .cbuf = _str_cbuf,
    .sub = _str_sub,
    .copy = _str_copy,
    .length = _str_length,
    .is_valid = _str_is_valid,
    .iter = _str_iter,
    .indexof = _str_indexof,
    .contains = _str_contains,
    .starts_with = _str_starts_with,
    .ends_with = _str_ends_with,
    .iter_split = _str_iter_split,
    // clang-format on
};
// clang-format off


static void fake__cex__cexlib__str__wrap__resetall(void) {
    RESET_FAKE(__wrap__str__isvalid)
    RESET_FAKE(__wrap__str__index)
    RESET_FAKE(__wrap__str_cstr)
    RESET_FAKE(__wrap__str_cbuf)
    RESET_FAKE(__wrap__str_sub)
    RESET_FAKE(__wrap__str_copy)
    RESET_FAKE(__wrap__str_length)
    RESET_FAKE(__wrap__str_is_valid)
    RESET_FAKE(__wrap__str_iter)
    RESET_FAKE(__wrap__str_indexof)
    RESET_FAKE(__wrap__str_contains)
    RESET_FAKE(__wrap__str_starts_with)
    RESET_FAKE(__wrap__str_ends_with)
    RESET_FAKE(__wrap__str_iter_split)
}

