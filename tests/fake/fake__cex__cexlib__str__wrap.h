// Autogenerated <fff.h> mocks
// NOTE: Do not edit, all changes can be lost

// clang-format off
#include <cex/cextest/fff.h>
#include <_cexcore/str.h>

// IMPORTANT: wrapping works only with gcc  `-Wl,--wrap=Shmem_new,--wrap=Protocol_event_emitter_new`  flag
FAKE_VALUE_FUNC(str_c, __wrap_str_cstr, const char*)str_c __real_str_cstr(const char*);

FAKE_VALUE_FUNC(str_c, __wrap_str_cbuf, char*, size_t)str_c __real_str_cbuf(char*, size_t);

FAKE_VALUE_FUNC(str_c, __wrap_str_sub, str_c, ssize_t, ssize_t)str_c __real_str_sub(str_c, ssize_t, ssize_t);

FAKE_VALUE_FUNC(Exc, __wrap_str_copy, str_c, char*, size_t)Exception __real_str_copy(str_c, char*, size_t);

FAKE_VALUE_FUNC(size_t, __wrap_str_len, str_c)size_t __real_str_len(str_c);

FAKE_VALUE_FUNC(bool, __wrap_str_is_valid, str_c)bool __real_str_is_valid(str_c);

FAKE_VALUE_FUNC(char*, __wrap_str_iter, str_c, cex_iterator_s*)char* __real_str_iter(str_c, cex_iterator_s*);

FAKE_VALUE_FUNC(ssize_t, __wrap_str_find, str_c, str_c, size_t, size_t)ssize_t __real_str_find(str_c, str_c, size_t, size_t);

FAKE_VALUE_FUNC(ssize_t, __wrap_str_rfind, str_c, str_c, size_t, size_t)ssize_t __real_str_rfind(str_c, str_c, size_t, size_t);

FAKE_VALUE_FUNC(bool, __wrap_str_contains, str_c, str_c)bool __real_str_contains(str_c, str_c);

FAKE_VALUE_FUNC(bool, __wrap_str_starts_with, str_c, str_c)bool __real_str_starts_with(str_c, str_c);

FAKE_VALUE_FUNC(bool, __wrap_str_ends_with, str_c, str_c)bool __real_str_ends_with(str_c, str_c);

FAKE_VALUE_FUNC(str_c, __wrap_str_remove_prefix, str_c, str_c)str_c __real_str_remove_prefix(str_c, str_c);

FAKE_VALUE_FUNC(str_c, __wrap_str_remove_suffix, str_c, str_c)str_c __real_str_remove_suffix(str_c, str_c);

FAKE_VALUE_FUNC(str_c, __wrap_str_lstrip, str_c)str_c __real_str_lstrip(str_c);

FAKE_VALUE_FUNC(str_c, __wrap_str_rstrip, str_c)str_c __real_str_rstrip(str_c);

FAKE_VALUE_FUNC(str_c, __wrap_str_strip, str_c)str_c __real_str_strip(str_c);

FAKE_VALUE_FUNC(int, __wrap_str_cmp, str_c, str_c)int __real_str_cmp(str_c, str_c);

FAKE_VALUE_FUNC(int, __wrap_str_cmpi, str_c, str_c)int __real_str_cmpi(str_c, str_c);

FAKE_VALUE_FUNC(str_c*, __wrap_str_iter_split, str_c, const char*, cex_iterator_s*)str_c* __real_str_iter_split(str_c, const char*, cex_iterator_s*);


const struct __module__str str = {
    // Autogenerated by CEX
    // clang-format off
    .cstr = str_cstr,
    .cbuf = str_cbuf,
    .sub = str_sub,
    .copy = str_copy,
    .len = str_len,
    .is_valid = str_is_valid,
    .iter = str_iter,
    .find = str_find,
    .rfind = str_rfind,
    .contains = str_contains,
    .starts_with = str_starts_with,
    .ends_with = str_ends_with,
    .remove_prefix = str_remove_prefix,
    .remove_suffix = str_remove_suffix,
    .lstrip = str_lstrip,
    .rstrip = str_rstrip,
    .strip = str_strip,
    .cmp = str_cmp,
    .cmpi = str_cmpi,
    .iter_split = str_iter_split,
    // clang-format on
};
// clang-format off


static void fake__cex__cexcore__str__wrap__resetall(void) {
    RESET_FAKE(__wrap_str_cstr)
    RESET_FAKE(__wrap_str_cbuf)
    RESET_FAKE(__wrap_str_sub)
    RESET_FAKE(__wrap_str_copy)
    RESET_FAKE(__wrap_str_len)
    RESET_FAKE(__wrap_str_is_valid)
    RESET_FAKE(__wrap_str_iter)
    RESET_FAKE(__wrap_str_find)
    RESET_FAKE(__wrap_str_rfind)
    RESET_FAKE(__wrap_str_contains)
    RESET_FAKE(__wrap_str_starts_with)
    RESET_FAKE(__wrap_str_ends_with)
    RESET_FAKE(__wrap_str_remove_prefix)
    RESET_FAKE(__wrap_str_remove_suffix)
    RESET_FAKE(__wrap_str_lstrip)
    RESET_FAKE(__wrap_str_rstrip)
    RESET_FAKE(__wrap_str_strip)
    RESET_FAKE(__wrap_str_cmp)
    RESET_FAKE(__wrap_str_cmpi)
    RESET_FAKE(__wrap_str_iter_split)
}

